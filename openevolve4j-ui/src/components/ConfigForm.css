/* ConfigForm specific styles */
.config-form {
  max-width: 1200px;
  margin: 0 auto;
}

.form-header {
  margin-bottom: var(--oe-space-6);
}

.form-header h2 {
  margin: 0;
  font-size: var(--oe-font-size-xl);
  font-weight: 600;
  color: var(--oe-text);
}

/* Tab Navigation */
.form-tabs {
  display: flex;
  gap: 2px;
  background: var(--oe-surface);
  border-radius: var(--oe-radius);
  padding: 4px;
  margin-bottom: var(--oe-space-6);
  border: 1px solid var(--oe-border);
  overflow-x: auto;
}

.tab-button {
  all: unset;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: var(--oe-space-2);
  padding: var(--oe-space-3) var(--oe-space-4);
  font-size: var(--oe-font-size-sm);
  font-weight: 500;
  color: var(--oe-text-dim);
  border-radius: var(--oe-radius-sm);
  transition: var(--oe-transition);
  white-space: nowrap;
  min-width: max-content;
}

.tab-button:hover {
  background: var(--oe-surface-hover);
  color: var(--oe-text);
}

.tab-button.active {
  background: var(--oe-accent);
  color: white;
  box-shadow: var(--oe-shadow-sm);
  position: relative;
}

.tab-button.active::after {
  content: '';
  position: absolute;
  bottom: -5px;
  left: 50%;
  transform: translateX(-50%);
  width: 0;
  height: 0;
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-bottom: 6px solid var(--oe-surface);
}

.tab-button svg {
  width: 16px;
  height: 16px;
}

/* Form Content */
.config-form-content {
  background: var(--oe-surface);
  border: 1px solid var(--oe-border);
  border-radius: var(--oe-radius);
  padding: var(--oe-space-6);
  box-shadow: var(--oe-shadow-sm);
  position: relative;
  overflow: hidden;
}

.config-form-content::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(90deg, var(--oe-accent), var(--oe-purple), var(--oe-accent));
  background-size: 200% 100%;
  animation: gradientShift 3s ease-in-out infinite;
}

@keyframes gradientShift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

.tab-content {
  animation: fadeSlideIn 0.2s ease;
}

.form-section {
  margin-bottom: var(--oe-space-8);
}

.form-section:last-child {
  margin-bottom: 0;
}

.form-section h3 {
  margin: 0 0 var(--oe-space-5) 0;
  font-size: var(--oe-font-size-lg);
  font-weight: 600;
  color: var(--oe-text);
  padding-bottom: var(--oe-space-3);
  border-bottom: 1px solid var(--oe-border);
  display: flex;
  align-items: center;
  gap: var(--oe-space-2);
}

.form-section h3 svg {
  color: var(--oe-accent);
}

/* Form Groups and Fields */
.form-group {
  margin-bottom: var(--oe-space-5);
}

.form-group label {
  display: block;
  font-size: var(--oe-font-size-sm);
  font-weight: 600;
  color: var(--oe-text-dim);
  margin-bottom: var(--oe-space-2);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.form-group label[for] {
  cursor: pointer;
}

.required-indicator {
  color: var(--oe-danger);
  font-weight: bold;
}

.form-group input,
.form-group select,
.form-group textarea {
  width: 100%;
  background: var(--oe-bg);
  color: var(--oe-text);
  border: 1px solid var(--oe-border);
  border-radius: var(--oe-radius-sm);
  padding: var(--oe-space-3);
  font-size: var(--oe-font-size);
  font-family: inherit;
  transition: var(--oe-transition);
  position: relative;
}

.form-group input:hover,
.form-group select:hover,
.form-group textarea:hover {
  border-color: var(--oe-accent);
}

.form-group input:focus,
.form-group select:focus,
.form-group textarea:focus {
  outline: none;
  border-color: var(--oe-accent);
  box-shadow: 0 0 0 1px var(--oe-accent), 0 0 0 3px rgba(59, 130, 246, 0.1);
  transform: translateY(-1px);
}

.form-group input::placeholder {
  color: var(--oe-text-faint);
}

.form-group input.error {
  border-color: var(--oe-danger);
  box-shadow: 0 0 0 1px var(--oe-danger);
  animation: shake 0.3s ease-in-out;
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-4px); }
  75% { transform: translateX(4px); }
}

.field-help {
  display: block;
  font-size: var(--oe-font-size-xs);
  color: var(--oe-text-faint);
  margin-top: var(--oe-space-1);
  line-height: 1.4;
}

.field-error {
  display: block;
  font-size: var(--oe-font-size-xs);
  color: var(--oe-danger);
  margin-top: var(--oe-space-1);
  font-weight: 500;
}

/* Form Row Layout */
.form-row {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--oe-space-4);
  margin-bottom: var(--oe-space-5);
}

.form-row .form-group {
  margin-bottom: 0;
}

/* Checkbox Groups */
.checkbox-group {
  display: flex;
  align-items: center;
  gap: var(--oe-space-3);
}

.checkbox-group label {
  display: flex;
  align-items: center;
  gap: var(--oe-space-2);
  margin: 0;
  font-size: var(--oe-font-size);
  font-weight: normal;
  text-transform: none;
  letter-spacing: normal;
  cursor: pointer;
}

.checkbox-group input[type="checkbox"] {
  width: auto;
  margin: 0;
  accent-color: var(--oe-accent);
}

/* Array Input Styles */
.array-input {
  display: flex;
  flex-direction: column;
  gap: var(--oe-space-2);
}

.array-item {
  display: flex;
  gap: var(--oe-space-2);
  align-items: center;
}

.array-item input {
  flex: 1;
}

.btn-remove,
.btn-add,
.btn-edit {
  all: unset;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--oe-space-1);
  padding: var(--oe-space-2);
  border: 1px solid var(--oe-border);
  border-radius: var(--oe-radius-sm);
  background: var(--oe-surface);
  color: var(--oe-text-dim);
  font-size: var(--oe-font-size-sm);
  font-weight: 500;
  transition: var(--oe-transition);
  min-width: 36px;
  height: 36px;
}

.btn-add {
  background: var(--oe-accent);
  border-color: var(--oe-accent);
  color: white;
  padding: var(--oe-space-2) var(--oe-space-3);
  min-width: auto;
  height: auto;
}

.btn-add:hover {
  background: #2563eb;
}

.btn-remove:hover {
  background: var(--oe-danger);
  border-color: var(--oe-danger);
  color: white;
}

.btn-edit:hover {
  background: var(--oe-surface-hover);
  color: var(--oe-text);
}

/* LLM Section Specific Styles */
.model-item {
  background: var(--oe-bg);
  border: 1px solid var(--oe-border);
  border-radius: var(--oe-radius-sm);
  padding: var(--oe-space-3);
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  gap: var(--oe-space-3);
}

.model-summary {
  flex: 1;
}

.model-summary strong {
  display: block;
  margin-bottom: var(--oe-space-1);
  color: var(--oe-text);
}

.model-params {
  display: flex;
  flex-wrap: wrap;
  gap: var(--oe-space-1);
}

.param-tag {
  background: var(--oe-accent);
  color: white;
  font-size: var(--oe-font-size-xs);
  padding: 2px var(--oe-space-2);
  border-radius: var(--oe-radius-xs);
  font-weight: 500;
}

.model-actions {
  display: flex;
  gap: var(--oe-space-1);
}

/* Metrics Section Specific Styles */
.metrics-list {
  background: var(--oe-surface);
  border: 1px solid var(--oe-border);
  border-radius: var(--oe-radius);
  overflow: hidden;
  box-shadow: var(--oe-shadow-sm);
}

.metrics-header {
  display: grid;
  grid-template-columns: 1fr 180px 48px;
  gap: var(--oe-space-4);
  padding: var(--oe-space-4) var(--oe-space-5);
  background: linear-gradient(135deg, var(--oe-bg-alt) 0%, var(--oe-surface) 100%);
  border-bottom: 1px solid var(--oe-border);
  font-size: var(--oe-font-size-sm);
  font-weight: 600;
  color: var(--oe-text);
  text-transform: uppercase;
  letter-spacing: 0.8px;
}

.metrics-header span:first-child {
  color: var(--oe-accent);
}

.metrics-header span:nth-child(2) {
  text-align: center;
}

.metrics-container {
  max-height: 400px;
  overflow-y: auto;
  background: var(--oe-bg);
}

.metrics-container:empty::after {
  content: "No metrics defined yet. Add your first metric below.";
  display: block;
  padding: var(--oe-space-8);
  text-align: center;
  color: var(--oe-text-faint);
  font-style: italic;
  background: var(--oe-bg);
}

.metric-row {
  display: grid;
  grid-template-columns: 1fr 180px 48px;
  gap: var(--oe-space-4);
  padding: var(--oe-space-4) var(--oe-space-5);
  align-items: center;
  border-bottom: 1px solid var(--oe-border);
  background: var(--oe-bg);
  transition: var(--oe-transition);
  position: relative;
}

.metric-row:hover {
  background: var(--oe-surface);
}

.metric-row:last-child {
  border-bottom: none;
}

.metric-row::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 3px;
  background: var(--oe-accent);
  opacity: 0;
  transition: var(--oe-transition);
}

.metric-row:hover::before {
  opacity: 1;
}

.metric-name-input {
  position: relative;
}

.metric-name-input input {
  width: 100%;
  background: transparent;
  border: 1px solid transparent;
  border-radius: var(--oe-radius-sm);
  padding: var(--oe-space-2) var(--oe-space-3);
  font-size: var(--oe-font-size);
  color: var(--oe-text);
  font-weight: 500;
  transition: var(--oe-transition);
}

.metric-name-input input:focus {
  background: var(--oe-surface);
  border-color: var(--oe-accent);
  box-shadow: 0 0 0 1px var(--oe-accent);
  outline: none;
}

.metric-name-input input:hover {
  border-color: var(--oe-border);
  background: var(--oe-surface);
}

.metric-objective {
  display: flex;
  justify-content: center;
}

.metric-objective select {
  width: 100%;
  background: var(--oe-surface);
  border: 1px solid var(--oe-border);
  border-radius: var(--oe-radius-sm);
  padding: var(--oe-space-2) var(--oe-space-3);
  font-size: var(--oe-font-size-sm);
  color: var(--oe-text);
  font-weight: 500;
  transition: var(--oe-transition);
  cursor: pointer;
}

.metric-objective select:focus {
  border-color: var(--oe-accent);
  box-shadow: 0 0 0 1px var(--oe-accent);
  outline: none;
}

.metric-objective select:hover {
  border-color: var(--oe-accent);
}

.metric-objective select option[value="maximize"] {
  background: rgba(16, 185, 129, 0.1);
  color: var(--oe-success);
}

.metric-objective select option[value="minimize"] {
  background: rgba(239, 68, 68, 0.1);
  color: var(--oe-danger);
}

.metric-row .btn-remove {
  width: 36px;
  height: 36px;
  padding: 0;
  border-radius: var(--oe-radius);
  justify-self: center;
  opacity: 0.7;
  transition: var(--oe-transition);
}

.metric-row:hover .btn-remove {
  opacity: 1;
}

.metric-row .btn-remove:hover {
  background: var(--oe-danger);
  border-color: var(--oe-danger);
  color: white;
  transform: scale(1.05);
}

.btn-add-metric {
  all: unset;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--oe-space-2);
  padding: var(--oe-space-4) var(--oe-space-5);
  background: linear-gradient(135deg, var(--oe-accent) 0%, #2563eb 100%);
  color: white;
  font-size: var(--oe-font-size);
  font-weight: 600;
  transition: var(--oe-transition);
  border-top: 1px solid var(--oe-border);
  position: relative;
  overflow: hidden;
}

.btn-add-metric::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
  transition: left 0.5s ease;
}

.btn-add-metric:hover::before {
  left: 100%;
}

.btn-add-metric:hover {
  background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
  transform: translateY(-1px);
  box-shadow: var(--oe-shadow);
}

.btn-add-metric:active {
  transform: translateY(0);
}

/* Empty state styling */
.metrics-container:has(.metric-row) + .btn-add-metric {
  margin-top: 0;
}

/* Improved focus indicators */
.metric-row:focus-within {
  background: var(--oe-surface);
  box-shadow: inset 0 0 0 1px var(--oe-accent);
}

.metric-row:focus-within::before {
  opacity: 1;
}

/* Add subtle animations */
.metric-row {
  animation: slideIn 0.3s ease;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateX(-10px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Metrics Summary */
.metrics-summary {
  margin-top: var(--oe-space-4);
  padding: var(--oe-space-3);
  background: var(--oe-accent-subtle);
  border: 1px solid rgba(59, 130, 246, 0.3);
  border-radius: var(--oe-radius-sm);
  animation: fadeSlideIn 0.3s ease;
}

.metrics-summary .field-help {
  margin: 0;
  color: var(--oe-accent);
  font-weight: 500;
}

/* Modal Styles */
.modal-overlay {
  position: fixed;
  inset: 0;
  background: rgba(10, 15, 25, 0.75);
  backdrop-filter: blur(6px);
  display: flex;
  align-items: flex-start;
  justify-content: center;
  padding: 80px 32px 48px;
  z-index: 200;
  overflow-y: auto;
}

.modal-content {
  width: 100%;
  max-width: 600px;
  background: var(--oe-bg-alt);
  border: 1px solid var(--oe-border);
  border-radius: var(--oe-radius-lg);
  box-shadow: var(--oe-shadow-lg);
  display: flex;
  flex-direction: column;
  max-height: calc(100vh - 160px);
  animation: fadeSlideIn 0.3s ease;
}

.modal-header {
  padding: var(--oe-space-5) var(--oe-space-5) var(--oe-space-3);
  border-bottom: 1px solid var(--oe-border);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.modal-header h3 {
  margin: 0;
  font-size: var(--oe-font-size-lg);
  font-weight: 600;
}

.modal-close {
  all: unset;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  border-radius: var(--oe-radius-sm);
  color: var(--oe-text-dim);
  transition: var(--oe-transition);
}

.modal-close:hover {
  background: var(--oe-surface-hover);
  color: var(--oe-text);
}

.modal-body {
  padding: var(--oe-space-5);
  overflow: auto;
  flex: 1;
}

.modal-footer {
  padding: var(--oe-space-4) var(--oe-space-5);
  border-top: 1px solid var(--oe-border);
  display: flex;
  justify-content: flex-end;
  gap: var(--oe-space-3);
}

/* Parameters List in Modal */
.parameters-list {
  display: flex;
  flex-direction: column;
  gap: var(--oe-space-2);
}

.parameter-row {
  display: grid;
  grid-template-columns: 1fr 1fr auto;
  gap: var(--oe-space-2);
  align-items: center;
}

.btn-add-param {
  all: unset;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: var(--oe-space-2);
  padding: var(--oe-space-2) var(--oe-space-3);
  background: var(--oe-surface);
  border: 1px solid var(--oe-border);
  border-radius: var(--oe-radius-sm);
  color: var(--oe-text-dim);
  font-size: var(--oe-font-size-sm);
  font-weight: 500;
  transition: var(--oe-transition);
}

.btn-add-param:hover {
  background: var(--oe-surface-hover);
  color: var(--oe-text);
}

/* Form Actions */
.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: var(--oe-space-3);
  margin-top: var(--oe-space-8);
  padding-top: var(--oe-space-6);
  border-top: 1px solid var(--oe-border);
}

.btn {
  all: unset;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  gap: var(--oe-space-2);
  padding: var(--oe-space-3) var(--oe-space-5);
  font-size: var(--oe-font-size);
  font-weight: 500;
  border-radius: var(--oe-radius);
  transition: var(--oe-transition);
  border: 1px solid transparent;
  line-height: 1;
}

.btn-primary {
  background: linear-gradient(135deg, var(--oe-accent) 0%, #2563eb 100%);
  color: white;
  border-color: var(--oe-accent);
  position: relative;
  overflow: hidden;
}

.btn-primary::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
  transition: left 0.5s ease;
}

.btn-primary:hover::before {
  left: 100%;
}

.btn-primary:hover {
  background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
  border-color: #2563eb;
  transform: translateY(-1px);
  box-shadow: var(--oe-shadow);
}

.btn-primary:active {
  transform: translateY(0);
}

.btn-secondary {
  background: var(--oe-surface);
  color: var(--oe-text-dim);
  border-color: var(--oe-border);
}

.btn-secondary:hover {
  background: var(--oe-surface-hover);
  color: var(--oe-text);
}

.btn-cancel {
  background: transparent;
  color: var(--oe-text-dim);
  border-color: var(--oe-border);
}

.btn-cancel:hover {
  background: var(--oe-surface-hover);
  color: var(--oe-text);
}

.btn-save {
  background: var(--oe-accent);
  color: white;
  border-color: var(--oe-accent);
}

.btn-save:hover {
  background: #2563eb;
  border-color: #2563eb;
}

/* Responsive Design */
@media (max-width: 768px) {
  .config-form-content {
    padding: var(--oe-space-4);
  }
  
  .form-tabs {
    overflow-x: auto;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }
  
  .form-tabs::-webkit-scrollbar {
    display: none;
  }
  
  .form-row {
    grid-template-columns: 1fr;
    gap: var(--oe-space-3);
  }
  
  .form-actions {
    flex-direction: column;
    align-items: stretch;
  }
  
  /* Responsive metrics layout */
  .metrics-header,
  .metric-row {
    grid-template-columns: 1fr auto;
    gap: var(--oe-space-3);
    padding: var(--oe-space-3) var(--oe-space-4);
  }
  
  .metrics-header span:nth-child(2) {
    display: none;
  }
  
  .metrics-header span:nth-child(3) {
    display: none;
  }
  
  .metric-objective {
    grid-column: 1;
    grid-row: 2;
    justify-content: flex-start;
    margin-top: var(--oe-space-2);
  }
  
  .metric-objective::before {
    content: "Objective: ";
    font-size: var(--oe-font-size-xs);
    color: var(--oe-text-dim);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-weight: 600;
    margin-right: var(--oe-space-2);
  }
  
  .metric-objective select {
    width: auto;
    min-width: 120px;
  }
  
  .metric-row .btn-remove {
    grid-column: 2;
    grid-row: 1;
    align-self: start;
  }
  
  .parameter-row {
    grid-template-columns: 1fr;
    gap: var(--oe-space-2);
  }
}

@media (max-width: 480px) {
  .tab-button {
    padding: var(--oe-space-2) var(--oe-space-3);
    font-size: var(--oe-font-size-xs);
  }
  
  .tab-button svg {
    width: 14px;
    height: 14px;
  }
}

/* Animation for tab content */
@keyframes fadeSlideIn {
  from {
    opacity: 0;
    transform: translateY(8px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Focus states for accessibility */
.tab-button:focus-visible,
.btn:focus-visible,
.btn-add:focus-visible,
.btn-remove:focus-visible,
.btn-edit:focus-visible {
  outline: 2px solid var(--oe-accent);
  outline-offset: 2px;
}

/* Loading state */
.form-actions .btn.loading {
  pointer-events: none;
  opacity: 0.65;
}

.form-actions .btn.loading::after {
  content: '';
  width: 16px;
  height: 16px;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-left: var(--oe-space-2);
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
